{"ast":null,"code":"var _jsxFileName = \"/Users/creator/Documents/projects/Israel-project/client/src/shared/ui/Selector/ui/Selector.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport cn from 'classnames';\nimport { Popup } from 'shared/ui/Popup';\nimport styles from './Selector.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let SelectorTheme = /*#__PURE__*/function (SelectorTheme) {\n  SelectorTheme[\"Outlined\"] = \"outlined\";\n  SelectorTheme[\"Text\"] = \"text\";\n  SelectorTheme[\"Default\"] = \"outlined\";\n  return SelectorTheme;\n}({});\nexport const Selector = props => {\n  _s();\n  var _boxRef$current;\n  const {\n    className,\n    value = null,\n    items,\n    theme = SelectorTheme.Default,\n    onSelectedChange = () => null\n  } = props;\n  const [opened, setOpened] = useState(false);\n  const boxRef = useRef(null);\n  const onItemClick = useCallback(id => {\n    onSelectedChange(id);\n    setOpened(false);\n  }, [onSelectedChange]);\n  const toggleOpened = () => setOpened(prevValue => !prevValue);\n  const selectorItems = useMemo(() => items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: cn([styles.selectorItem, 'truncate']),\n    onClick: () => onItemClick(item.id),\n    children: item.caption\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this)), [items, onItemClick]);\n  const selectedCaption = useMemo(() => {\n    var _items$find;\n    return (_items$find = items.find(item => item.id === value)) === null || _items$find === void 0 ? void 0 : _items$find.caption;\n  }, [items, value]);\n  const boxBoundingRect = (_boxRef$current = boxRef.current) === null || _boxRef$current === void 0 ? void 0 : _boxRef$current.getBoundingClientRect();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn([styles.selectorBox, className, styles[`box-${theme}`]]),\n      ref: boxRef,\n      onClick: toggleOpened,\n      children: selectedCaption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), opened && boxRef.current && boxBoundingRect && /*#__PURE__*/_jsxDEV(Popup, {\n      className: styles[`popup-${theme}`],\n      style: {\n        width: boxRef.current.offsetWidth\n      },\n      left: boxBoundingRect.left,\n      top: boxBoundingRect.top + boxRef.current.clientHeight,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.selectorList,\n        children: selectorItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Selector, \"GGNkukpD9y5oI4O7QIuyRhFjzyY=\");\n_c = Selector;\nvar _c;\n$RefreshReg$(_c, \"Selector\");","map":{"version":3,"names":["useCallback","useMemo","useRef","useState","cn","Popup","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","SelectorTheme","Selector","props","_s","_boxRef$current","className","value","items","theme","Default","onSelectedChange","opened","setOpened","boxRef","onItemClick","id","toggleOpened","prevValue","selectorItems","map","item","selectorItem","onClick","children","caption","fileName","_jsxFileName","lineNumber","columnNumber","selectedCaption","_items$find","find","boxBoundingRect","current","getBoundingClientRect","selectorBox","ref","style","width","offsetWidth","left","top","clientHeight","selectorList","_c","$RefreshReg$"],"sources":["/Users/creator/Documents/projects/Israel-project/client/src/shared/ui/Selector/ui/Selector.tsx"],"sourcesContent":["import { FC, useCallback, useMemo, useRef, useState } from 'react';\nimport cn from 'classnames';\nimport { Popup } from 'shared/ui/Popup';\nimport styles from './Selector.module.scss';\n\nexport interface ISelectorItem {\n  caption: string;\n  id: string | null;\n}\n\nexport enum SelectorTheme {\n  Outlined = 'outlined',\n  Text = 'text',\n  Default = Outlined\n}\n\nexport interface ISelectorProps {\n  theme?: SelectorTheme;\n  className?: string;\n  items: ISelectorItem[];\n  value?: ISelectorItem['id']\n  onSelectedChange?: (id: ISelectorItem['id']) => void;\n}\n\nexport const Selector: FC<ISelectorProps> = (props) => {\n  const { \n    className,\n    value = null,\n    items,\n    theme = SelectorTheme.Default,\n    onSelectedChange = () => null\n  } = props;\n  const [opened, setOpened] = useState<boolean>(false);\n  const boxRef = useRef<HTMLDivElement>(null);\n\n  const onItemClick = useCallback((id: ISelectorItem['id']) => {\n    onSelectedChange(id);\n    setOpened(false);\n  }, [onSelectedChange]);\n\n  const toggleOpened = () => setOpened((prevValue) => !prevValue);\n\n  const selectorItems = useMemo(() => items.map((item) => (\n    <li\n      key={item.id}\n      className={cn([styles.selectorItem, 'truncate'])}\n      onClick={() => onItemClick(item.id)}\n    >\n      {item.caption}\n    </li>\n  )), [items, onItemClick])\n\n  const selectedCaption = useMemo(() => items.find((item) => item.id === value)?.caption, [items, value]);\n  const boxBoundingRect = boxRef.current?.getBoundingClientRect();\n\n  return (\n    <>\n      <div\n        className={cn([styles.selectorBox, className, styles[`box-${theme}`]])}\n        ref={boxRef}\n        onClick={toggleOpened}\n      >\n        {selectedCaption}\n      </div>\n      {opened && boxRef.current && boxBoundingRect && (\n        <Popup\n          className={styles[`popup-${theme}`]}\n          style={{ width: boxRef.current.offsetWidth }}\n          left={boxBoundingRect.left}\n          top={boxBoundingRect.top + boxRef.current.clientHeight}\n        >\n          <ul className={styles.selectorList}>\n            {selectorItems}\n          </ul>\n        </Popup>\n      )}\n    </>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}